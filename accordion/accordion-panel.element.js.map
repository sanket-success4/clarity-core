{"version":3,"file":"accordion-panel.element.js","sourceRoot":"","sources":["../../../src/accordion/accordion-panel.element.ts"],"names":[],"mappings":"AAAA;;;;GAIG;;AAEH,OAAO,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,aAAa,CAAC;AAC/C,OAAO,EAAE,UAAU,EAAE,KAAK,EAAE,QAAQ,EAAgB,MAAM,oBAAoB,CAAC;AAC/E,OAAO,EAAE,MAAM,EAAE,MAAM,kCAAkC,CAAC;AAE1D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GAmCG;AACH,MAAM,OAAO,iBAAkB,SAAQ,UAAU;IAAjD;;QAC+B,aAAQ,GAAG,KAAK,CAAC;QAEjB,aAAQ,GAAG,KAAK,CAAC;IA8BhD,CAAC;IA1BS,MAAM;QACZ,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC3C,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,CAAA;;;;;kBAKG,GAAG,EAAE,CAAC,IAAI,CAAC,MAAM,EAAE;qBAChB,IAAI,CAAC,QAAQ;yBACT,IAAI,CAAC,QAAQ;yBACb,IAAI,CAAC,QAAQ;;;;wCAIE,CAAC,IAAI,CAAC,QAAQ;;;WAG3C,CAAC;IACV,CAAC;IAED,MAAM,KAAK,MAAM;QACf,OAAO,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;IAC9B,CAAC;CACF;AAhC8B;IAA5B,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;mDAAkB;AAEjB;IAA5B,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;mDAAkB;AAErC;IAAR,KAAK,EAAE;yDAAiD","sourcesContent":["/*\n * Copyright (c) 2016-2020 VMware, Inc. All Rights Reserved.\n * This software is released under MIT license.\n * The full license information can be found in LICENSE in the root directory of this project.\n */\n\nimport { html, LitElement } from 'lit-element';\nimport { baseStyles, event, property, EventEmitter } from '@cds/core/internal';\nimport { styles } from './accordion-panel.element.css.js';\n\n/**\n * Web component accordion panel to be used inside an accordion\n *\n * ```typescript\n * import '@cds/core/accordion/register.js';\n * ```\n *\n * ```html\n * <cds-accordion>\n *   <cds-accordion-panel expanded>\n *     <cds-accordion-header>Item 1</cds-accordion-header>\n *     <cds-accordion-content>Content 1</cds-accordion-content>\n *   </cds-accordion-panel>\n *   <cds-accordion-panel>\n *     <cds-accordion-header>Item 2</cds-accordion-header>\n *     <cds-accordion-content>Content 2</cds-accordion-content>\n *   </cds-accordion-panel>\n *   <cds-accordion-panel disabled>\n *     <cds-accordion-header>Item 3</cds-accordion-header>\n *     <cds-accordion-content>Content 3</cds-accordion-content>\n *   </cds-accordion-panel>\n * </cds-accordion>\n * ```\n *\n * @beta\n * @element cds-accordion-panel\n * @slot\n * @slot cds-accordion-header\n * @slot cds-accordion-content\n * @event expandedChange - notify when the user has clicked the panel header\n * @cssprop --border-color\n * @cssprop --border-width\n * @cssprop --color\n * @cssprop --font-size\n * @cssprop --font-weight\n */\nexport class CdsAccordionPanel extends LitElement {\n  @property({ type: Boolean }) disabled = false;\n\n  @property({ type: Boolean }) expanded = false;\n\n  @event() protected expandedChange: EventEmitter<boolean>;\n\n  private toggle() {\n    this.expandedChange.emit(!this.expanded);\n  }\n\n  render() {\n    return html`<div class=\"private-host\" role=\"group\">\n      <button\n        class=\"accordion-header-button\"\n        cds-layout=\"horizontal align:vertical-center gap:md\"\n        type=\"button\"\n        @click=\"${() => this.toggle()}\"\n        ?disabled=\"${this.disabled}\"\n        aria-disabled=\"${this.disabled}\"\n        aria-expanded=\"${this.expanded}\"\n      >\n        <slot name=\"accordion-header\"></slot>\n      </button>\n      <div role=\"region\" aria-hidden=\"${!this.expanded}\" class=\"accordion-content\">\n        <slot name=\"accordion-content\"></slot>\n      </div>\n    </div>`;\n  }\n\n  static get styles() {\n    return [baseStyles, styles];\n  }\n}\n"]}